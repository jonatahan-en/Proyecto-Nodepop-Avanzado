openapi: 3.0.0
info:
  title: Nodepop API
  description: |
    Nodepop API es una API RESTful diseñada para gestionar productos y usuarios en Nodepop.
    Ofrece funcionalidades como autenticación, creación, actualización, búsqueda y eliminación
    de productos con filtros avanzados.
    
  version: 1.0.0
  
security:
  - BearerAuth: []
paths:
  /api/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Token generado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          description: Credenciales inválidas

  /api/products:
    get:
      summary: Listar productos
      description: >
        Obtiene una lista de productos con filtros y paginación.
        
        **Examples:**
        - Pagination: `http://localhost:3000/api/products/?limit=2&skip=2`
        - Sorting: `http://localhost:3000/api/products/?sort=-price`
        - Field selection: `http://localhost:3000/api/products/?fields=name -_id`
      parameters:
        - name: skip
          in: query
          description: Elementos a saltar (para paginación).
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Número de elementos por página.
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Ordenar resultados por campo.
          required: false
          schema:
            type: string
        - name: price
          in: query
          description: Filtrar por rango de precios 
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filtrar productos por nombre.
          required: false
          schema:
            type: string
      responses:
        200:
          description: Lista de productos obtenida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                  productCount:
                    type: integer

    post:
      summary: Crear un nuevo producto
      description: Agrega un nuevo producto al sistema.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                image:
                  type: string
                  format: binary
      responses:
        201:
          description: Producto creado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: object
        400:
          description: Error en los datos enviados

  /api/products/{productId}:
    get:
      summary: Obtener un producto
      description: Obtiene un producto por su ID.
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Producto obtenido correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: object
        404:
          description: Producto no encontrado

    put:
      summary: Actualizar un producto
      description: Modifica un producto existente.
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        200:
          description: Producto actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: object
        404:
          description: Producto no encontrado

    delete:
      summary: Eliminar un producto
      description: Borra un producto existente por ID.
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado correctamente
        404:
          description: Producto no encontrado

